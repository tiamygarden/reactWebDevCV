name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci

      - name: Install SonarScanner
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/4.8.0.2856/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner.zip -d sonar-scanner
          echo "${{ github.workspace }}/sonar-scanner/sonar-scanner-4.8.0.2856-linux/bin" >> $GITHUB_PATH

      - name: Run SonarQube Scanner
        run: sonar-scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Git Configuration
        run: |
          git config user.email "tommy.requillard@laposte.net"
          git config user.name "tiamygarden"

  predeploy:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: npm ci

      - name: Copy netlify.toml to dist/
        run: cp netlify.toml dist/
        if: github.ref == 'refs/heads/master'

  build:
    runs-on: ubuntu-latest
    needs: predeploy
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: npm ci

      - name: Build Project
        run: npm run build

      - name: List Build Directory Contents
        run: ls -la dist/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Netlify CLI
        run: npm install -g netlify-cli

      - name: Install Dependencies
        run: npm ci

      - name: Set Base URL
        run: echo "REACT_APP_BASE_URL=https://reactwebdevcv.netlify.app/.netlify/functions/api" >> ".env"

      - name: Verify Build Directory
        run: ls -la dist/

      - name: Link Netlify Site
        run: netlify link --id ${{ secrets.NETLIFY_SITE_ID }}

      - name: Deploy to Netlify
        run: netlify deploy --dir "dist" --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} --prod
